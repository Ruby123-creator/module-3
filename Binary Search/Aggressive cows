
import java.util.*;
public class Main

{
    public static boolean helper(int possibledistance ,int stalls[] ,int cow){
        int countedcow =1;
        int lastplacedcow = stalls[0];
        
        for(int i=1;i<stalls.length;i++){
            if(stalls[i]-lastplacedcow>=possibledistance){//here monotonic relation is in between number of cows and distance between 2 cows
                 countedcow++;
                 lastplacedcow = stalls[i];         // if cow increases then the distance between 2 cows decreases in a fixed no. of stalls
                
            }
            
        }
        if(countedcow>=cow)return true;
        return false;
    }
	public static void main(String[] args) {
		//System.out.println("Hello World");
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();//number of cows stalls
	    int stalls[] = new int[n];
	    for(int i=0;i<n;i++){
	        stalls[i] = sc.nextInt();
	        
	    }
	    int cows = sc.nextInt();//number of cows
	    //find search space
	    //minimum distance b/w 2 cows is 1
	    int start = 1;
 //maximum distance is max-min so we sort the array
 Arrays.sort(stalls);
        int end = stalls[n-1]-stalls[0];
	    int ans =0;
	    while(start<=end){
	        int mid = start +(end-start)/2;
	        if(helper(mid,stalls,cows)){
	            ans = mid;
	            start =mid+1;  //beacuse we find the maximum one of all minimum distances between 2 cows
	        }
	        else{
	            end = mid-1;
	           
	        }
	    }
	    System.out.print(ans);
	    
	}
}
